<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2017-02-06T11:37:56Z</updated>
  <entry>
    <title>Spring Cloud Camden.SR5 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/spring-cloud-camden-sr5-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marcin Grzejszczak</name>
    </author>
    <id>tag:spring.io,2017-02-06:2827</id>
    <updated>2017-02-06T11:37:56Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Service Release 5 of the &lt;a href="http://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="http://repo.spring.io/release"&gt;Spring Release repository&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-cloud-dependencies%22"&gt;Maven Central&lt;/a&gt;. The documentation can be found &lt;a href="http://cloud.spring.io/spring-cloud-static/Camden.SR5/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Included in this release is the Spring Boot 1.5 compatibility of all the Spring Cloud projects. Other than the addition of Spring Cloud Task, this release includes primarily bug fixes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This release is not compatible with &lt;strong&gt;Spring Boot 1.3&lt;/strong&gt;. In other words your Spring Boot 1.3 application &lt;strong&gt;will not work&lt;/strong&gt; with Camden.SR5.&lt;/p&gt;&lt;h4&gt;&lt;a href="#the-following-modules-were-updated-as-part-of-camden-sr5" class="anchor" name="the-following-modules-were-updated-as-part-of-camden-sr5"&gt;&lt;/a&gt;The following modules were updated as part of Camden.SR5:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Build &lt;a href="https://github.com/spring-cloud/spring-cloud-build/milestone/12?closed=1"&gt;1.2.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Stream &lt;a href="https://spring.io/blog/2017/01/20/spring-cloud-stream-brooklyn-sr2-and-chelsea-m1-released"&gt;Brooklyn.SR2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Netflix &lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/milestone/36?closed=1"&gt;1.2.5.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Sleuth &lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/milestone/21?closed=1"&gt;1.1.2.RELEASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloud"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Cloud Foundry Manifest Editor Beta released for Visual Studio Code</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/03/cloud-foundry-manifest-editor-beta-released-for-visual-studio-code" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2017-02-03:2826</id>
    <updated>2017-02-03T09:03:04Z</updated>
    <content type="html">&lt;p&gt;As part of our activities to support developers around the globe building applications with Spring and deploying those apps to Cloud Foundry and PCF, we are proud to announce our first beta version of the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Pivotal.vscode-manifest-yaml"&gt;Cloud Foundry Manifest editing support&lt;/a&gt; for &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; (on macOS, Linux x64, and Windows).&lt;/p&gt;
&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Ao6Mx6Q0XKE?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;h2&gt;&lt;a href="#why-visual-studio-code" class="anchor" name="why-visual-studio-code"&gt;&lt;/a&gt;Why Visual Studio Code?&lt;/h2&gt;
&lt;p&gt;Visual Studio Code is a lightweight and open-source code editor that runs on macOS, Linux x64, and Windows. It is based on an interesting architecture with regards to extensibility. Support for languages in Visual Studio Code gets implemented as so called “language servers”. Those language servers are independent of the editor that you use. The editor and the language server are connected using a protocol (called the language server protocol). Even though Visual Studio Code introduced this protocol, other editors and IDEs started to adopt this language server protocol - like the Eclipse IDE (from version 4.7 on) or Eclipse Che as a cloud IDE. Other lightweight editors like Sublime Text and Atom will likely offer support in the near future, too. As a result, we can focus on implementing the Cloud Foundry manifest editor support as an independent language server and you can add this support to the editor or IDE of your choice.&lt;/p&gt;
&lt;p&gt;Visual Studio Code introduced this protocol and offers the best support for it at the moment - including a nice marketplace for those extensions that allow a smooth and easy experience installing and using them. Therefore, as a first step, our language server for Cloud Foundry manifest files is now available on that marketplace. Open your installation of Visual Studio Code, go to the extensions section, and search for “manifest”. The Cloud Foundry Manifest Editor support will show up.&lt;/p&gt;&lt;h2&gt;&lt;a href="#working-with-manifest-files" class="anchor" name="working-with-manifest-files"&gt;&lt;/a&gt;Working with manifest files&lt;/h2&gt;
&lt;p&gt;Once installed, it helps you working with Cloud Foundry manifest files. It provides content-assist for properties and certain values, validates the property keys and values (to avoid typos and surprises when deploying the app), and provides extensive hover help.&lt;/p&gt;
&lt;p&gt;The content-assist can also provide help entering certain values that depend on your specific Cloud Foundry target that you use. To be more specific, the tooling infers the available buildpacks as well as a list of service instances that you have around on your Cloud Foundry target. Once that information is available, it becomes super easy to define the buildpack or services in your Cloud Foundry manifest files.&lt;/p&gt;
&lt;p&gt;In order to get the necessary information, the tooling uses the CF CLI configuration and its access token. So whatever you have configured in your CF CLI (e.g. your API endpoint + space) will be used automatically to gather the information about buildpacks and services on demand (as long as you are logged into the CF target on the CLI).&lt;/p&gt;&lt;h2&gt;&lt;a href="#outlook" class="anchor" name="outlook"&gt;&lt;/a&gt;Outlook&lt;/h2&gt;
&lt;p&gt;This marks our first step towards implementing tooling in an IDE-agnostic way, adopting the language server protocol from Visual Studio Code - in addition to our work on the Eclipse-based Spring Tool Suite and our ongoing support for Jetbrains to improve their awesome Spring tooling in IntelliJ even further. And since this is just our first step here, there is more to come in 2017, like new language servers around Spring and Spring Boot, improved versions of the manifest editing support, and more options for editors and IDEs to plug this into. One of those options will remain the Spring Tool Suite, while other (lightweight) editors and IDEs will get awesome Spring and Spring Boot tooling that way, too. Stay tuned.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring IO Platform Brussels-RC1</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/02/spring-io-platform-brussels-rc1" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2017-02-01:2824</id>
    <updated>2017-02-02T20:50:00Z</updated>
    <content type="html">&lt;p&gt;It&amp;rsquo;s my pleasure to announce that Spring IO Platform Brussels-RC1 is available now from the &lt;a href="http://repo.spring.io/milestone/"&gt;Spring milestone repository&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;The Brussels release introduces the following projects to the Platform:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Kafka 1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Brussels release also upgrades the versions of a number of projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring AMQP 1.7&lt;/li&gt;
  &lt;li&gt;Spring Boot 1.5&lt;/li&gt;
  &lt;li&gt;Spring Data Ingalls&lt;/li&gt;
  &lt;li&gt;Spring Integration Java DSL 1.2&lt;/li&gt;
  &lt;li&gt;Spring Integration Kafka 2.1&lt;/li&gt;
  &lt;li&gt;Spring LDAP 2.3&lt;/li&gt;
  &lt;li&gt;Spring Security 4.2&lt;/li&gt;
  &lt;li&gt;Spring Session 1.3&lt;/li&gt;
  &lt;li&gt;Spring Web Services 2.4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The versions of numerous third-party dependencies have also been updated.&lt;/p&gt;
&lt;p&gt;Please take RC1 for a spin and let us know if you find any problems. All being well, Brussels-RELEASE will be available later this month.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/platform/docs/Brussels-RC1/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Team at Devnexus 2017</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/01/spring-team-at-devnexus-2017" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-01:2825</id>
    <updated>2017-02-01T16:31:00Z</updated>
    <content type="html">&lt;p&gt;If you are joining the Spring Team at the SOLD OUT &lt;a href="https://www.devnexus.com/s/index"&gt;DevNexus 2017&lt;/a&gt; event in Atlanta, GA on February 22-24 2017, here&amp;rsquo;s where you can find us and other Pivotal experts!&lt;/p&gt;
&lt;p&gt;Pivotal is sponsoring and will be at booth # 7 from 9am-3pm on Thursday Feb 23, and 9am - 6pm on Friday Feb 24.&lt;/p&gt;
&lt;p&gt;We will have experts available at the booth to talk to you about Spring Boot, Spring Cloud, Spring Cloud Data Flow, Cloud Foundry, and much more. Don’t miss these talks and workshops from Spring &amp;amp; Pivotal leaders on Cloud-Native, Reactive Spring, and much more!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wed Feb 22 - Workshops (Full Day)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/15525"&gt;Cloud Native Java Workshop - Josh Long&lt;/a&gt;&lt;br/&gt;WS Room A312 9:00 AM - 5:30 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17473"&gt;Cloud Native Architecture Patterns - Matt Stine&lt;/a&gt;&lt;br/&gt;WS Room A313 9:00 AM - 5:30 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/15480"&gt;Microservices based Streaming and Batch Data Processing - Sabby Anandan, Glenn Renfro&lt;/a&gt;&lt;br/&gt;WS Room A314 9:00 AM - 5:30 PM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thurs Feb 23&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17213"&gt;Reactive Spring - Josh Long&lt;/a&gt;&lt;br/&gt;Frameworks Track, Room A311 1:00 PM - 2:15 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17236"&gt;Securely Managing Secrets with Vault - Mark Paluch&lt;/a&gt;&lt;br/&gt;Security Track, Room A315 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17523"&gt;Modern batch processing with Spring Batch - Michael Minella&lt;/a&gt;&lt;br/&gt;Tools Track, Room A313 4:00 PM - 5:15 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17320"&gt;Reactive Functional Data Pipelines with Spring Cloud Microservices - Marius Bogoevici, Mark Pollack&lt;/a&gt;&lt;br/&gt;Data Science and Machine Learning Track, Room A403 4:00 PM - 5:15 PM &lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17153"&gt;Reactor 3, the Reactive Foundation for Java 8 and Spring 5 - Simon Baslé , Stephane Maldini&lt;/a&gt;&lt;br/&gt;Frameworks Track - Room A311 5:30 PM - 6:45 PM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Friday Feb 24&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17357"&gt;Data Processing With Microservices - Michael Minella&lt;/a&gt;&lt;br/&gt;Microservices Track - Room A302 10:30 AM - 11:45 AM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17410"&gt;Breaking the Magician&amp;rsquo;s Code: Diving deeper into Spring Boot internals - Madhura Bhave, Phillip Webb&lt;/a&gt;&lt;br/&gt;Frameworks Track, Room A311 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17198"&gt;This stuff is cool, but HOW CAN I GET MY COMPANY TO DO IT? Businessing the S*** out of Transformative Development!&lt;/a&gt;- Mark Heckler&lt;br/&gt;Agile Track - Room A314 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17446"&gt;Architecture Deep Dive in Spring Security - Joe Grandja&lt;/a&gt;&lt;br/&gt;Security Track - Room A315 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17219"&gt;Clouds &amp;amp; Containers: Give it to Me Straight, What&amp;rsquo;s the Difference &amp;amp; Why Should I Care?&lt;/a&gt;&lt;br/&gt;Microservices Track - Room A302 4:00 PM - 5:15 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17305"&gt;Composing Music in the Cloud - James Weaver&lt;/a&gt;&lt;br/&gt;Cloud Track - Room A305 4:00 PM - 5:15 PM&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring IO Platform Athens-SR3</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/01/spring-io-platform-athens-sr3" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2017-02-01:2823</id>
    <updated>2017-02-01T16:29:00Z</updated>
    <content type="html">&lt;p&gt;I am pleased to announce that &lt;a href="http://platform.spring.io/platform"&gt;Spring IO Platform&lt;/a&gt; Athens-SR3 is now available from both &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3Aio.spring.platform"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This maintenance release upgrades the versions of a number of the projects in the Platform:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring AMQP 1.6.7&lt;/li&gt;
  &lt;li&gt;Spring Boot 1.4.4&lt;/li&gt;
  &lt;li&gt;Spring Data Hopper SR7&lt;/li&gt;
  &lt;li&gt;Spring Framework 4.3.6&lt;/li&gt;
  &lt;li&gt;Spring Integration 4.3.7&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The versions of a number of third-party dependencies have also been updated.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/platform/docs/Athens-SR3/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Spring Batch</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/01/spring-tips-spring-batch" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2017-01-26:2809</id>
    <updated>2017-02-01T01:36:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: &lt;a href="https://www.twitter.com/starbuxman"&gt;Josh Long&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Spring fans! In this tip, we&amp;rsquo;ll look at how to process large amounts of sequential data using Spring Batch.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/x4nBNLoizOc?list=PLgGXSWYM2FpPw8rV0tZoMiJYSCiLhPnOc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Dalston M1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/31/spring-cloud-dalston-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Spencer Gibb</name>
    </author>
    <id>tag:spring.io,2017-01-30:2817</id>
    <updated>2017-01-31T13:01:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the community, I am pleased to announce that Milestone 1 (M1) of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Dalston&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="https://repo.spring.io/milestone/"&gt;Spring Milestone&lt;/a&gt; repository. You can check out the Dalston &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Dalston-Release-Notes"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#notable-changes-in-the-dalston-release-train" class="anchor" name="notable-changes-in-the-dalston-release-train"&gt;&lt;/a&gt;Notable Changes in the Dalston Release Train&lt;/h2&gt;
&lt;p&gt;Spring Cloud Vault Config is a new project that provides client-side support for externalized secret management in a distributed system via &lt;a href="https://www.vaultproject.io/"&gt;Hashicorp Vault&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#config-server" class="anchor" name="config-server"&gt;&lt;/a&gt;Config Server&lt;/h3&gt;
&lt;p&gt;Hashicorp Vault was previously added as a backend to Config Server to go along with the VCS based backends. Config Server now has support for multiple backends via a Composite pattern. This allows for combinations of backend types that was not possible before, such as: Vault and git or multiple git backends. Authentication to git repositories hosted by AWS Codecommit is now supported.&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-cloud-commons" class="anchor" name="spring-cloud-commons"&gt;&lt;/a&gt;Spring Cloud Commons&lt;/h3&gt;
&lt;p&gt;Since the beginning of these Spring Cloud Core modules (Commons, Config, Netflix, Bus), implementations of &lt;code&gt;DiscoveryClient&lt;/code&gt; have automatically registered the running client with the discovery server. This was a side effect of the initial Netflix Eureka implementation. Now service registration and discovery of registered services are separate concerns. There is now a &lt;code&gt;ServiceRegistry&lt;/code&gt; interface that Spring Cloud Netflix, Consul and Zookeeper all implement. By default, the client is still auto-registered, but this can be disabled via the &lt;code&gt;autoRegister&lt;/code&gt; attribute of &lt;code&gt;@EnableDiscoveryClient&lt;/code&gt; or dynamically via a property. This also allows multiple services per JVM to be registered programatically. Look for a future blog post for further details.&lt;/p&gt;
&lt;p&gt;Support for &lt;code&gt;@LoadBalanced&lt;/code&gt; &lt;code&gt;AsyncRestTemplate&lt;/code&gt; was contributed by the community.&lt;/p&gt;&lt;h3&gt;&lt;a href="#sleuth" class="anchor" name="sleuth"&gt;&lt;/a&gt;Sleuth&lt;/h3&gt;
&lt;p&gt;Support for a general-purpose context propagation system has been added to Sleuth. It is called baggage and allows for arbitray attributes to be passed through boundaries, such as HTTP or messaging, using Sleuth&amp;rsquo;s already built instrumentation.&lt;/p&gt;&lt;h3&gt;&lt;a href="#contract" class="anchor" name="contract"&gt;&lt;/a&gt;Contract&lt;/h3&gt;
&lt;p&gt;Contract was enhanced to support more flexibility for contract inputs and outputs. Pact support was added for reading contracts as opposed to the Groovy DSL. Contract was made more pluggable allowing custom DSL formats, Test &amp;amp; Stub generation, and Stub Runner implementations.&lt;/p&gt;&lt;h3&gt;&lt;a href="#consul" class="anchor" name="consul"&gt;&lt;/a&gt;Consul&lt;/h3&gt;
&lt;p&gt;Besides support for the new &lt;code&gt;ServiceRegistry&lt;/code&gt; API, Spring Cloud Consul supports the Consul feature to deregister zombie services (ie services that fail health checks for a configurable amount of time will be removed from Consul).&lt;/p&gt;&lt;h3&gt;&lt;a href="#other" class="anchor" name="other"&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;p&gt;Dalston is based on Spring Boot 1.5.x and that is the minimum required version. Other changes include upgrades to various libraries, bug fixes, documentation, and polishing. Many thanks to all the community contributions of pull requests and issues.&lt;/p&gt;
&lt;p&gt;The following modules were updated as part of Dalston.M1:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Module &lt;/th&gt;
      &lt;th&gt;Version &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud AWS &lt;/td&gt;
      &lt;td&gt;1.2.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Build &lt;/td&gt;
      &lt;td&gt;1.3.1.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Bus &lt;/td&gt;
      &lt;td&gt;1.3.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Cloudfoundry &lt;/td&gt;
      &lt;td&gt;1.1.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Commons &lt;/td&gt;
      &lt;td&gt;1.2.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Config &lt;/td&gt;
      &lt;td&gt;1.3.0.M2 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Consul &lt;/td&gt;
      &lt;td&gt;1.2.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Contract &lt;/td&gt;
      &lt;td&gt;1.1.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Netflix &lt;/td&gt;
      &lt;td&gt;1.3.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Security &lt;/td&gt;
      &lt;td&gt;1.2.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Sleuth &lt;/td&gt;
      &lt;td&gt;1.2.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Stream &lt;/td&gt;
      &lt;td&gt;Chelsea.M1 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Task &lt;/td&gt;
      &lt;td&gt;1.1.2.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Vault Config &lt;/td&gt;
      &lt;td&gt;1.0.0.M2 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Zookeeper &lt;/td&gt;
      &lt;td&gt;1.1.0.M1 &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NOTE: Spring Cloud CLI 1.2.0.M1 will be released later.&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloud"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;http://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;&#xD;
&amp;lt;dependencyManagement&amp;gt;&#xD;
  &amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;Dalston.M1&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
    &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
  &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
repositories {&#xD;
    maven {&#xD;
        url &amp;#39;http://repo.spring.io/milestone&amp;#39;&#xD;
    }&#xD;
}&#xD;
apply plugin: &amp;quot;io.spring.dependency-management&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Dalston.M1&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-eureka&amp;#39;&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - January 31st, 2017</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/31/this-week-in-spring-january-31st-2017" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2017-01-31:2822</id>
    <updated>2017-01-31T10:44:29Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&amp;rsquo;s been a very busy week and we&amp;rsquo;ve got a lot to cover so let&amp;rsquo;s get to it! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;first, the &lt;em&gt;big&lt;/em&gt; news: &lt;a href="http://spring.io/blog/2017/01/30/spring-boot-1-5-1-released"&gt;Spring Boot 1.5 has just been released!&lt;/a&gt; The new release improves the integration with Cloud Foundry, features Spring Data Ingalls support, LDAP support, a loggers endpoint, and Apache Kafka auto-configuration support. &lt;a href="http://start.spring.io"&gt;Get started with Spring Boot now&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Spring Data guru March Paluch put together a nice look at &lt;a href="http://spring.io/blog/2017/01/30/what-s-new-in-spring-data-release-ingalls"&gt;Spring Data Ingalls&lt;/a&gt;. The new release is packed with lots of great features including a 20-70% performance improvement, event publication for aggregate roots, improved pagination and &lt;em&gt;so&lt;/em&gt; much more! Read the post!&lt;/li&gt;
  &lt;li&gt;Spring Data lead Oliver Gierke just announced Spring Data Ingalls has gone GA! Hurray! &lt;a href="http://spring.io/blog/2017/01/26/spring-data-release-train-ingalls-goes-ga"&gt;See the release post for more&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;This is a cool SpringOne Platform talk on migrating Spring XD-based &lt;a href="http://spring.io/blog/2017/01/30/springone-platform-2016-replay-migrating-from-spring-xd-to-spring-data-cloud-flow"&gt;applications to Spring Cloud Data Flow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Rajini Sivaram&amp;rsquo;s SpringOne Platform talk on &lt;a href="http://spring.io/blog/2017/01/30/springone-platform-2016-replay-reactive-kafka"&gt;Apache Kafka is a good primer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nivesh Gopathi gave a nice talk on secure, &lt;a href="http://spring.io/blog/2017/01/30/springone-platform-2016-replay-secure-dynamic-app-config-at-gaptech-with-spring-cloud-vault-and-consul"&gt;dynamic configuration with Spring Cloud Vault&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Boot guru Stephane Nicoll just &lt;a href="http://spring.io/blog/2017/01/26/spring-boot-1-4-4-available-now"&gt;announced Spring Boot 1.4.4&lt;/a&gt; which includes a slew of updates and fixes.&lt;/li&gt;
  &lt;li&gt;Spring Data lead Oliver Gierke &lt;a href="http://spring.io/blog/2017/01/26/spring-data-release-train-hopper-sr7-released"&gt;just announced Spring Data Hopper SR7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;last week I put together a &lt;a href="http://spring.io/blog/2017/01/26/spring-tips-couchbase"&gt;Spring Tip on Spring Data Couchbase&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;going to be at Devoxx US? &lt;a href="http://spring.io/blog/2017/01/25/spring-team-at-devoxx-us-2017"&gt;We on the Spring team will be too&lt;/a&gt;! Join us!&lt;/li&gt;
  &lt;li&gt;Spring Integration lead &lt;a href="http://spring.io/blog/2017/01/25/spring-integration-4-3-7-is-available"&gt;Gary Russell just announced Spring Integration 4.3.7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Boot lead Stephane Nicoll just announced &lt;a href="http://spring.io/blog/2017/01/25/spring-framework-4-3-6-available-now"&gt;Spring Framework 4.3.6, which is a packed maintenance release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring I/O Platform lead &lt;a href="http://spring.io/blog/2017/01/24/dependency-management-plugin-1-0-0-release"&gt;Andy Wilkinson just announced 1.0 of the Dependency Management Plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google Developer Advocate Ray Tsang just put together a nice post on &lt;a href="https://medium.com/google-cloud/distributed-tracing-spring-boot-microservices-with-stackdriver-trace-7fe42c6de3f3#.hlaikdzdo"&gt;Spring Boot-based tracing with Google Stackdriver&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;speaking of distributed tracing, the Baeldung has a great &lt;a href="http://www.baeldung.com/spring-cloud-sleuth-single-application"&gt;post on distributed tracing with Spring Cloud Sleuth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pivotal&amp;rsquo;s own Fred Melo has a great post &lt;a href="https://content.pivotal.io/blog/messaging-patterns-for-event-driven-microservices"&gt;on messaging-patterns for event-driven microservices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the Stark and Wayne blog has a nice post that &lt;a href="http://www.starkandwayne.com/blog/demystifying-cloud-foundrys-diego/"&gt;demystifies the Cloud Foundry Diego scheduler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Oliver Wolf put together a nice post describing some of the &lt;a href="https://specify.io/systems/cloudfoundry/features-and-usecases"&gt;key features of a cloud platform like Cloud Foundry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this isn&amp;rsquo;t strictly Spring related, but I thought it interesting: &lt;a href="https://dzone.com/articles/jdk-9-is-the-end-of-the-road-for-some-features"&gt;Java 9 is the end of the road for some features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.5.1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/30/spring-boot-1-5-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2017-01-26:2815</id>
    <updated>2017-01-30T23:59:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring Boot team, and everyone that has contributed, I am pleased to announce that Spring Boot 1.5.1 has been released and is available now from &lt;a href="http://repo.spring.io/release/"&gt;repo.spring.io&lt;/a&gt;, &lt;a href="http://search.maven.org/#search|ga|1|g%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt; and &lt;a href="https://bintray.com/bintray/jcenter/org.springframework.boot%3Aspring-boot/view"&gt;Bintray&lt;/a&gt;. This release adds a significant number of new features and improvements. For full &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.5-Release-Notes#upgrading-from-spring-boot-14"&gt;upgrade instructions&lt;/a&gt; and &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.5-Release-Notes#new-and-noteworthy"&gt;&amp;ldquo;new and noteworthy&amp;rdquo;&lt;/a&gt; features please see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.5-Release-Notes"&gt;release notes&lt;/a&gt;.&lt;/p&gt;&lt;h1&gt;&lt;a href="#what-rsquo-s-new-in-1-5" class="anchor" name="what-rsquo-s-new-in-1-5"&gt;&lt;/a&gt;What&amp;rsquo;s new in 1.5&lt;/h1&gt;&lt;h2&gt;&lt;a href="#apache-kafka-support" class="anchor" name="apache-kafka-support"&gt;&lt;/a&gt;Apache Kafka Support&lt;/h2&gt;
&lt;p&gt;Spring Boot 1.5 includes auto-configuration support for Apache Kafka via the spring-kafka project. To use Kafka simply include the &lt;code&gt;spring-kafka&lt;/code&gt; dependency and configure the appropriate &lt;code&gt;spring.kafka.*&lt;/code&gt; application properties.&lt;/p&gt;&lt;h2&gt;&lt;a href="#cloud-foundry-actuator-extensions" class="anchor" name="cloud-foundry-actuator-extensions"&gt;&lt;/a&gt;Cloud Foundry actuator extensions&lt;/h2&gt;
&lt;p&gt;Spring Boot’s actuator module now includes additional support that is activated when you deploy to a compatible Cloud Foundry instance. The &lt;code&gt;/cloudfoundryapplication&lt;/code&gt; path provides an alternative secured route to all &lt;code&gt;NamedMvcEndpoint&lt;/code&gt; beans.&lt;/p&gt;
&lt;p&gt;Cloud Foundry management UIs can make use of the endpoint to display additional actuator information. For example, Pivotal Cloud Foundry shows health information next to the application status. Please see &lt;a href="https://content.pivotal.io/blog/pivotal-cloud-foundry-1-9-sets-the-bar-on-massive-scale"&gt;this blog post&lt;/a&gt; about Pivotal Cloud Foundry 1.9 for further details.&lt;/p&gt;&lt;h2&gt;&lt;a href="#spring-data-ingalls" class="anchor" name="spring-data-ingalls"&gt;&lt;/a&gt;Spring Data Ingalls&lt;/h2&gt;
&lt;p&gt;Spring Boot 1.5 ships with the recently announced Spring Data Ingalls. Please refer to the &lt;a href="https://spring.io/blog/2017/01/26/spring-data-release-train-ingalls-goes-ga"&gt;announcement blog post&lt;/a&gt; to learn about all its new features.&lt;/p&gt;&lt;h2&gt;&lt;a href="#ldap-support" class="anchor" name="ldap-support"&gt;&lt;/a&gt;LDAP support&lt;/h2&gt;
&lt;p&gt;Spring Boot now offers auto-configuration for any compliant LDAP server as well as support for the embedded in-memory LDAP server from &lt;a href="https://www.ldap.com/unboundid-ldap-sdk-for-java"&gt;UnboundID&lt;/a&gt;. Please see the &lt;a href="http://docs.spring.io/spring-boot/docs/1.5.0.RELEASE/reference/htmlsingle/#boot-features-ldap"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;&lt;h2&gt;&lt;a href="#loggers-endpoint" class="anchor" name="loggers-endpoint"&gt;&lt;/a&gt;Loggers endpoint&lt;/h2&gt;
&lt;p&gt;A new actuator loggers endpoint allows you to view and change application logging levels on the fly. Both JMX and MVC endpoints are available. For example, to change the logging level with the MVC endpoint, you can issue a POST to /loggers/com.yourcorp.application with the following JSON:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;{&#xD;
  &amp;quot;configuredLevel&amp;quot;: &amp;quot;DEBUG&amp;quot;&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To update the logger using the JMX endpoint you would use the &lt;code&gt;setLogLevel&lt;/code&gt; operation. Please see the &lt;a href="http://docs.spring.io/spring-boot/docs/1.5.0.RELEASE/reference/htmlsingle/#production-ready-loggers"&gt;documentation&lt;/a&gt; for further details.&lt;/p&gt;&lt;h2&gt;&lt;a href="#other-changes" class="anchor" name="other-changes"&gt;&lt;/a&gt;Other changes&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a whole host of other changes and improvements that are documented in the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.5-Release-Notes"&gt;Release Notes&lt;/a&gt;. You can also find a list of deprecated classes and methods that we plan to remove in the next version.&lt;/p&gt;&lt;h1&gt;&lt;a href="#thank-you" class="anchor" name="thank-you"&gt;&lt;/a&gt;Thank you&lt;/h1&gt;
&lt;br/&gt;
&lt;p&gt;We want to take this opportunity to again thank all our users and contributors. We&amp;rsquo;ve now had over &lt;a href="https://github.com/spring-projects/spring-boot/graphs/contributors"&gt;320 people&lt;/a&gt; submit code, and there have been over &lt;a href="https://github.com/spring-projects/spring-boot/commits/master"&gt;10000 commits&lt;/a&gt; to the project.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask at &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#what-happened-to-1-5-0" class="anchor" name="what-happened-to-1-5-0"&gt;&lt;/a&gt;What happened to 1.5.0?&lt;/h3&gt;
&lt;p&gt;We noticed &lt;a href="https://github.com/spring-projects/spring-boot/issues/8136"&gt;a problem&lt;/a&gt; with 1.5.0.RELEASE after it had been synced to Maven Central. Rather than requiring an exclusion for the incorrectly scoped dependency, we opted to fix it and release 1.5.1.RELEASE instead.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>What's New in Spring Data Release Ingalls?</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/30/what-s-new-in-spring-data-release-ingalls" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2017-01-24:2804</id>
    <updated>2017-01-30T12:47:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;As you probably have seen, we have &lt;a href="https://spring.io/blog/2017/01/26/spring-data-release-train-ingalls-goes-ga"&gt;just announced&lt;/a&gt; the GA release of Spring Data release train Ingalls.
As the release is packed with way too many features to cover them in a release announcement, I would like to use this post to take a deeper look at the changes and features that come with the 15 modules on the train.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="housekeeping"&gt;&lt;a class="anchor" href="#housekeeping"&gt;&lt;/a&gt;Housekeeping&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A very fundamental change in the release train&amp;#8217;s dependencies is the upgrade to Spring Framework 4.3 (currently 4.3.6) as the baseline.
Other dependency upgrades are mostly driven by major version bumps of the underlying store drivers and implementations that need to be reflected in potential breaking changes to the API exposed by those modules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Ingalls also ships with a new Spring Data Module: Spring Data LDAP.
The Spring LDAP project has shipped Spring Data repository support for quite a while.
After a couple of glitches and incompatibilities we decided to move LDAP repository support into a separate Spring Data module so that it is more closely aligned to the release train.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Another big change to the module setup is that Spring Data for Apache Cassandra has now become a core module, which means it now has been and is going to be maintained by the Spring Data team at Pivotal.
A great chance to thank the previous core maintainers David Webb and Matthew T. Adams for all their efforts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Besides those very fundamental changes, the team has been working on a whole bunch of new features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use of method handles for property access in conversion subsystem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for XML and JSON based projections for REST payloads (Commons)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-origin resource sharing with Spring Data REST&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More MongoDB Aggregation Framework operators for array, arithmetic, date and set operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for Redis Geo commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade to Cassandra 3.0 with support for query derivation in repository query methods, User-defined types, Java 8 types (Optional, Stream), JSR-310 and ThreeTen Backport.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for Javaslang&amp;#8217;s &lt;code&gt;Option&lt;/code&gt;, collection and map types for repository query methods.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;These are the ones that I would like to discuss in the remainder of this post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="performance-improvements"&gt;&lt;a class="anchor" href="#performance-improvements"&gt;&lt;/a&gt;Performance improvements&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="methodhandles-for-improved-object-access"&gt;&lt;a class="anchor" href="#methodhandles-for-improved-object-access"&gt;&lt;/a&gt;MethodHandles for improved object access&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A major theme of our release train was to improve the performance in how our object-to-store mapping subsystem accesses data from domain classes.
Traditionally, Spring Data has used reflection for that, either inspecting the fields directly or invoking accessor methods of properties.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Although the perfomance of reflection has significantly improved in Java 8, there is still a different way that we can use to even bring the performance close to native access: &lt;code&gt;MethodHandle&lt;/code&gt;s.
They are especially fast to use if they are held in static fields of a class, which poses a bit of a challenge to us as we do not know about the structure the domain types you want to persist beforehand.
However, we already apply a similar kind of optimization to the creation of domain object instances by using ASM to generate tailor made factories that invoke constructors directly.
We now went ahead and applied the same idea to our &lt;code&gt;PersistentPropertyAccessor&lt;/code&gt; implementations: we inspect the types and ASM-generate a class that holds static final &lt;code&gt;MethodHandle&lt;/code&gt;s, that our API to read and write properties then use to avoid reflection.
In case the classes expose public API (e.g. accessors) we just use those.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In case you are interested, the implementation code can be found &lt;a href="https://github.com/spring-projects/spring-data-commons/blob/17366031071c68ddb87a9de1debac6f1dda85524/src/main/java/org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory.java"&gt;here&lt;/a&gt;.
However, brace yourselves, ASM code might feel a bit complicated to read.
All Spring Data modules using the object-to-store mapping benefit from this change (i.e. JPA does not) if you are running at least Java 7. You can find more details in the &lt;a href="https://jira.spring.io/browse/DATACMNS-809"&gt;ticket requesting that change&lt;/a&gt;.
We have seen performance improvements from 20 to 70%.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="domain-event-publication-from-aggregate-roots"&gt;&lt;a class="anchor" href="#domain-event-publication-from-aggregate-roots"&gt;&lt;/a&gt;Domain event publication from aggregate roots&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#context-functionality-events"&gt;Spring Application Events&lt;/a&gt; are usually used to publish technical events within an application. However, they&amp;#8217;re also a great tool to decouple parts of a system by using the infrastructure for domain events. This is usually implemented like that:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;class OrderManagement {

  private final ApplicationEventPublisher publisher;
  private final OrderRepository orders;

  @Transactional
  void completeOrder(Order order) {

    OrderCompletedEvent event = order.complete();
    orders.save(order);
    publisher.publish(event);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See how the aggregate root produces an event which a service component then publishes via Spring&amp;#8217;s &lt;code&gt;ApplicationEventPublisher&lt;/code&gt;. The pattern is a nice one in general but involves quite a bit of ceremony and introduces a technical framework dependency in a business component which one might like to avoid.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;With the Spring Data Ingalls release train, repositories now inspect the aggregates handed to &lt;code&gt;save(…)&lt;/code&gt; methods for the aggregate method annotation &lt;code&gt;@DomainEvents&lt;/code&gt;, invokes that method and automatically publishes the returned objects via the event publisher. So assuming an &lt;code&gt;Order.complete()&lt;/code&gt; implementation looking something like this (&lt;code&gt;AbstractAggregateRoot&lt;/code&gt; is a Spring Data provided type containing the annotated methods):&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;class Order extends AbstractAggregateRoot {

  Order complete() {
    register(new OrderCompletedEvent(this));
    return this;
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;the client code can be simplified to&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;class OrderManagement {

  private final OrderRepository orders;

  @Transactional
  void completeOrder(Order order) {
    repository.save(order.complete());
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As you can see, there are no references to Spring infrastructure anymore. The event publication is taken care of by the component responsible for it: the aggregate root. Read more about that new mechanism in the &lt;a href="http://docs.spring.io/spring-data/commons/docs/current/reference/html/#core.domain-events"&gt;reference documentation&lt;/a&gt;. There are more advanced ideas regarding domain events circling around in the team currently. Watch this space for further updates.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="pagination"&gt;&lt;a class="anchor" href="#pagination"&gt;&lt;/a&gt;Pagination&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Pagination queries with Spring Data MongoDB and Spring Data JPA now benefit from an &lt;a href="https://github.com/spring-projects/spring-data-commons/blob/17366031071c68ddb87a9de1debac6f1dda85524/src/main/java/org/springframework/data/repository/support/PageableExecutionUtils.java#L46"&gt;improved fetching strategy&lt;/a&gt; that more aggressively tries to avoid executing a count query.
Constructing a &lt;code&gt;Page&lt;/code&gt; requires the fetched data and usually the total record count returned by the query.
While data queries can be optimized with range selection and indexes, count queries are quite expensive because they require a scan of the table or an index.
In case you request the last, only partially-filled page, we can skip counting the records as the toal number of elements can be calculated from the offset and numer of items in the result page.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="mongodb-dbref-resolution"&gt;&lt;a class="anchor" href="#mongodb-dbref-resolution"&gt;&lt;/a&gt;MongoDB DBRef resolution&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Another performance-related change was made in Spring Data MongoDB&amp;#8217;s &lt;code&gt;DBRef&lt;/code&gt; fetching. Collections of references are fetched in a &lt;a href="https://github.com/spring-projects/spring-data-mongodb/blob/b79474c92c231ee4f2b3bd77fdde12878002acef/spring-data-mongodb/src/main/java/org/springframework/data/mongodb/core/convert/MappingMongoConverter.java#L1253"&gt;single bulk-operation&lt;/a&gt; if the references in the collection point to the same database collection. That means, wen can basically read the related collection using a single query instead of one for each element.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="xml-and-json-based-projections-for-rest-payloads"&gt;&lt;a class="anchor" href="#xml-and-json-based-projections-for-rest-payloads"&gt;&lt;/a&gt;XML and JSON based projections for REST payloads&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;a href="https://spring.io/blog/2014/09/09/spring-data-release-train-evans-goes-ga"&gt;Evans&lt;/a&gt; and &lt;a href="https://spring.io/blog/2016/05/03/what-s-new-in-spring-data-hopper"&gt;Hopper&lt;/a&gt; release trains shipped with projection features that allow customizing the view on existing domain objects by applying projection interfaces.
Projections can be used in application code (repositories or manually implemented Spring MVC controllers) or with Spring Data REST to expose a dedicated view on a domain object through a web endpoint.
The projection also could have been used to bind form submissions (see this example for details).
With Ingalls we now extend that support to handle JSON and XML requests:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@RestController
class UserController {

  /**
   * Receiving POST requests supporting both JSON and XML.
   */
  @PostMapping(value = "/")
  HttpEntity&amp;lt;String&amp;gt; post(@RequestBody UserPayload user) {

    return ResponseEntity
      .ok(String.format("firstname: %s, lastname: %s",
        user.getFirstname(), user.getLastname()));
  }
}

@ProjectedPayload
public interface UserPayload {

  @XBRead("//firstname")
  @JsonPath("$..firstname")
  String getFirstname();

  @XBRead("//lastname")
  @JsonPath("$..lastname")
  String getLastname();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Projection interfaces are annotated with &lt;code&gt;@ProjectedPayload&lt;/code&gt; to enable projection and projection method annotations contain a &lt;a href="https://github.com/jayway/JsonPath#getting-started"&gt;JSON path&lt;/a&gt; or &lt;a href="https://xmlbeam.org/t01.html#E01:_Printing_some_weather_data"&gt;XPath expression&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If these property annotations are omitted, we are going to assume defaults (i.e. &lt;code&gt;$.firstname&lt;/code&gt; or &lt;code&gt;/firstname&lt;/code&gt; etc. in the example above).
The fundamental idea here is to&amp;#8201;&amp;#8212;&amp;#8201;instead of using an object structure to map incoming data&amp;#8201;&amp;#8212;&amp;#8201;rather point exactly to the parts of a payload that you are interested in.
The use of JSON Path expressions or XPath allows you to be more lenient about the actual location of the element you want to access so that a change in the payload structure does not necessarily break the consumer.
See how the example above looksup &lt;code&gt;firstname&lt;/code&gt; anywhere in the document.
If the party producing the JSON decided to all of a sudden nest that into e.g. a &lt;code&gt;user&lt;/code&gt; document or XML sub node, nothing would need to change in the consuming code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you want to use that kind of payload access on the client, you can simply register the corresponding &lt;code&gt;HttpMessageConverter&lt;/code&gt; instances on a &lt;code&gt;RestTemplate&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Configuration
class Config {

  @Bean
  RestTemplateBuilder builder() {
    return new RestTemplateBuilder()
      .additionalMessageConverters(new ProjectingJackson2HttpMessageConverter())
      .additionalMessageConverters(new XmlBeamHttpMessageConverter());
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The projection binding support uses &lt;a href="https://github.com/jayway/JsonPath"&gt;JsonPath&lt;/a&gt; to evaluate JSON-path expressions and &lt;a href="https://xmlbeam.org/"&gt;XMLBeam&lt;/a&gt; to evaluate XPath expressions. You can find a complete example for this in in the &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/c523b8d468484075658a2b3c63a4a718c54bab16/web/projection"&gt;Spring Data Examples repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="cross-origin-resource-sharing-with-spring-data-rest"&gt;&lt;a class="anchor" href="#cross-origin-resource-sharing-with-spring-data-rest"&gt;&lt;/a&gt;Cross-Origin Resource Sharing with Spring Data REST&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Using client-side JavaScript requests inside of browsers is restricted by the &lt;a href="https://en.wikipedia.org/wiki/Same-origin_policy"&gt;same-origin policy&lt;/a&gt;. Requesting data from other sources than the application server is a forbidden by default because it is a cross-origin request. Enabling Cross-Origin Resource Sharing (CORS) requires the target server to provide &lt;a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing"&gt;CORS headers&lt;/a&gt; to be sent with every HTTP response. The Ingalls release of Spring Data REST now allows you to easily:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@CrossOrigin
public interface CustomerRepository extends CrudRepository&amp;lt;Customer, Long&amp;gt; {}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-http" data-lang="http"&gt;GET /customers/1 HTTP/1.1
Origin: http://localhost&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-http" data-lang="http"&gt;HTTP/1.1 200 OK
Vary: Origin
ETag: "0"
Access-Control-Allow-Origin: http://localhost
Access-Control-Allow-Credentials: true
Last-Modified: Tue, 24 Jan 2017 09:38:01 GMT
Content-Type: application/hal+json;charset=UTF-8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Exported domain classes and repositories can be annotated with &lt;code&gt;@CrossOrigin&lt;/code&gt; to enable CORS and the annotation can be used to customize the setup.
For more global configuration you can use &lt;code&gt;RepositoryRestConfigurer.configureRepositoryRestConfiguration(…)&lt;/code&gt; to gain full control over the CORS setup across all Spring Data REST exposed resources.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Component
public class SpringDataRestCustomization extends
  RepositoryRestConfigurerAdapter {

  @Override
  public void configureRepositoryRestConfiguration(
    RepositoryRestConfiguration config) {

    config.getCorsRegistry().addCorsMapping("/person/**")
      .allowedOrigins("http://domain2.com")
      .allowedMethods("PUT", "DELETE")
      .allowedHeaders("header1", "header2", "header3")
      .exposedHeaders("header1", "header2")
      .allowCredentials(false).maxAge(3600);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Find more details about that in the &lt;a href="http://docs.spring.io/spring-data/rest/docs/current/reference/html/#customizing-sdr.configuring-cors"&gt;reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="new-mongodb-aggregation-framework-operators"&gt;&lt;a class="anchor" href="#new-mongodb-aggregation-framework-operators"&gt;&lt;/a&gt;New MongoDB Aggregation Framework operators&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The MongoDB team adds &lt;a href="https://docs.mongodb.com/manual/release-notes/3.4/#aggregation"&gt;new aggregation framework operators&lt;/a&gt; on a regular basis.
With the Ingalls release train, we took the chance to enhance Spring Data MongoDB&amp;#8217;s set of available operators to align with MongoDB ones and how you interact with these.
This release adds native support for the following aggregation operators and aggregation stages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="aggregation-operators"&gt;&lt;a class="anchor" href="#aggregation-operators"&gt;&lt;/a&gt;Aggregation operators&lt;/h3&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$anyElementTrue&lt;/code&gt;, &lt;code&gt;$allElementsTrue&lt;/code&gt;, &lt;code&gt;$setEquals&lt;/code&gt;, &lt;code&gt;$setIntersection&lt;/code&gt;, &lt;code&gt;$setUnion&lt;/code&gt;, &lt;code&gt;$setDifference&lt;/code&gt;, &lt;code&gt;$setIsSubset&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$filter&lt;/code&gt;, &lt;code&gt;$in&lt;/code&gt;, &lt;code&gt;$indexOfArray&lt;/code&gt;, &lt;code&gt;$range&lt;/code&gt;, &lt;code&gt;$reverseArray&lt;/code&gt;, &lt;code&gt;$reduce&lt;/code&gt;, &lt;code&gt;$zip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$indexOfBytes&lt;/code&gt;, &lt;code&gt;$indexOfCP&lt;/code&gt;, &lt;code&gt;$split&lt;/code&gt;, &lt;code&gt;$strLenBytes&lt;/code&gt;, &lt;code&gt;$strLenCP&lt;/code&gt;, &lt;code&gt;$substrCP&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$stdDevPop&lt;/code&gt;, &lt;code&gt;$stdDevSamp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$abs&lt;/code&gt;, &lt;code&gt;$ceil&lt;/code&gt;, &lt;code&gt;$exp&lt;/code&gt;, &lt;code&gt;$floor&lt;/code&gt;, &lt;code&gt;$ln&lt;/code&gt;, &lt;code&gt;$log&lt;/code&gt;, &lt;code&gt;$log10&lt;/code&gt;, &lt;code&gt;$pow&lt;/code&gt;, &lt;code&gt;$sqrt&lt;/code&gt;, &lt;code&gt;$trunc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$arrayElementAt&lt;/code&gt;, &lt;code&gt;$concatArrays&lt;/code&gt;, &lt;code&gt;$isArray&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$literal&lt;/code&gt;, &lt;code&gt;$let&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$dayOfYear&lt;/code&gt;, &lt;code&gt;$dayOfMonth&lt;/code&gt;, &lt;code&gt;$dayOfWeek&lt;/code&gt;, &lt;code&gt;$year&lt;/code&gt;, &lt;code&gt;$month&lt;/code&gt;, &lt;code&gt;$week&lt;/code&gt;, &lt;code&gt;$hour&lt;/code&gt;, &lt;code&gt;$minute&lt;/code&gt;, &lt;code&gt;$second&lt;/code&gt;, &lt;code&gt;$millisecond&lt;/code&gt;, &lt;code&gt;$dateToString&lt;/code&gt;, &lt;code&gt;$isoDayOfWeek&lt;/code&gt;, &lt;code&gt;$isoWeek&lt;/code&gt;, &lt;code&gt;$isoWeekYear&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$count&lt;/code&gt;, &lt;code&gt;$cond&lt;/code&gt;, &lt;code&gt;$ifNull&lt;/code&gt;, &lt;code&gt;$map&lt;/code&gt;, &lt;code&gt;$switch&lt;/code&gt;, &lt;code&gt;$type&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="aggregation-stages"&gt;&lt;a class="anchor" href="#aggregation-stages"&gt;&lt;/a&gt;Aggregation stages&lt;/h3&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$facet&lt;/code&gt;, &lt;code&gt;$bucket&lt;/code&gt;, &lt;code&gt;$bucketAuto&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$replaceRoot&lt;/code&gt;, &lt;code&gt;$unwind&lt;/code&gt;, &lt;code&gt;$graphLookup&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Aggregation operators have entry points for creation and are built in a fluent style.
Multiple aggregators are grouped in facades like &lt;code&gt;ArrayOperators&lt;/code&gt;, &lt;code&gt;ArithmeticOperators&lt;/code&gt; and many more.
Field references and aggregation expressions can be used in the entry point methods.
Entry points to aggregation stage operators are accessible via &lt;code&gt;Aggregation&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;Aggregation.newAggregation(
  project()
    .and(ArrayOperators.arrayOf("instock").concat("ordered")).as("items")
);

Aggregation.newAggregation(
  project()
    .and(ArithmeticOperators.valueOf("quizzes").sum()).as("quizTotal")
);

Aggregation.newAggregation(
  group().stdDevSamp("age").as("ageStdDev")
);

Aggregation.newAggregation(Employee.class,
  match(Criteria.where("name").is("Andrew")),
  graphLookup("employee")
    .startWith("reportsTo")
    .connectFrom("reportsTo")
    .connectTo("name")
    .depthField("depth")
    .maxDepth(5)
    .as("reportingHierarchy"));

Aggregation.newAggregation(bucketAuto("field", 5)
  .andOutputExpression("netPrice + tax").as("total")
);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Any currently unsupported aggregation operators and expressions can be used by implementing &lt;code&gt;AggregationOperation&lt;/code&gt; or &lt;code&gt;AggregationExpression&lt;/code&gt; respectively.
Please also note that some of these operators were introduced in very recent MongoDB versions and can only be used with those.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The growing number of operators opens up a whole lot new set of possibilities to combine them with each other.
Operators can be nested in various combinations, which can sometimes lead to code that is hard to read.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;newAggregation(
  project()
    .and(ConditionalOperators.when(Criteria.where("a").gte(42))
      .then("answer")
      .otherwise("no-answer"))
      .as("deep-tought")
);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To simplify this code we now support Spring Expression Language (SpEL) expressions to formulate the same projection like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;newAggregation(
  project()
    .andExpression("cond(a &amp;gt;= 42, 'answer', 'no-answer')")
    .as("deep-tought")
);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;SpEL support in aggregations is not something entirely new.
In fact, it has been available since Spring Data MongoDB 1.6.
So far it supported arithmetic operations (like &lt;code&gt;'$items.price' * '$items.quantity'&lt;/code&gt;).
The new bit that Ingalls adds here is that now aggregation operators can be expressed as functions that accept parameters.
You pass fields to aggregation operators by using their field names.
The aggregation framework then evaluates SpEL expressions and creates the BSON documents for the aggregation operator.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The gateway to SpEL is &lt;code&gt;AggregationSpELExpression.expressionOf(…)&lt;/code&gt; that allows handing in SpEL expressions everywhere you are able to hand in an &lt;code&gt;AggregationExpression&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;newAggregation(
  group("number")
    .first(expressionOf("cond(a &amp;gt;= 42, 'answer', 'no-answer')"))
    .as("deep-tought")
)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Refer to the
&lt;a href="http://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#mongo.aggregation"&gt;reference documentation&lt;/a&gt; or the &lt;a href="https://github.com/spring-projects/spring-data-examples/blob/9a2e95a784cf449bdda372668ae78e8d5c06956d/mongodb/aggregation/src/test/java/example/springdata/mongodb/aggregation/SpringBooksIntegrationTests.java"&gt;MongoDB Aggegation Framework example&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="redis-geo-indexes"&gt;&lt;a class="anchor" href="#redis-geo-indexes"&gt;&lt;/a&gt;Redis Geo Indexes&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Redis 3.2 supports geo indexing and we received great support from our community regarding geo indexes.
We ship geo index support with Ingalls that is available through &lt;code&gt;RedisTemplate&lt;/code&gt; and Redis repositories. Let us have a look at an example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;geoOperations.geoAdd("Sicily", new Point(13.361389, 38.115556), "Arigento");
geoOperations.geoAdd("Sicily", new Point(15.087269, 37.502669), "Catania");
geoOperations.geoAdd("Sicily", new Point(13.583333, 37.316667), "Palermo");

GeoResults&amp;lt;GeoLocation&amp;lt;String&amp;gt;&amp;gt; result =
  geoOperations.geoRadiusByMember("Sicily", "Palermo",
    new Distance(100, DistanceUnit.KILOMETERS));

List&amp;lt;String&amp;gt; geohashes = geoOperations.geoHash("Sicily", "Arigento", "Catania");
List&amp;lt;Point&amp;gt; points = geoOperations.geoPos("Sicily", "Arigento", "Palermo");&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Geo indexes integrate seamless with your domain classes.
Domain objects with geospatial values can be indexed in a Geo index and queried through Redis repositories.
The following example shows domain class and repository interface declarations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public class City {

  @Id String id;
  String name;

  @GeoIndexed Point location;
}

public interface CityRepository extends Repository&amp;lt;City, String&amp;gt; {

  List&amp;lt;City&amp;gt; findByLocationNear(Point point, Distance distance);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Declaring a repository query using the &lt;code&gt;Near&lt;/code&gt; or &lt;code&gt;Within&lt;/code&gt; keywords lets you use geospatial queries near a &lt;code&gt;Point&lt;/code&gt; or within a &lt;code&gt;Circle&lt;/code&gt;.
Note the &lt;code&gt;@GeoIndexed&lt;/code&gt; annotation used on &lt;code&gt;location&lt;/code&gt; allows the usage of a geo-index that can be used with the derived geospatial query method.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="spring-data-for-apache-cassandra"&gt;&lt;a class="anchor" href="#spring-data-for-apache-cassandra"&gt;&lt;/a&gt;Spring Data for Apache Cassandra&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data for Apache Cassandra is now a core module maintained by the Spring Data team.
Besides the change in primary ownership of development effort, the Ingalls release train ships with a series of noteworthy changes to the module itself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We upgraded to the Datastax Java Driver 3.1 and so Spring Data for Apache Cassandra now supports Apache Cassandra 3.0 (1.2, 2.0, 2.1, 2.2 and 3.0, up to 3.9).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This release also ships with support for query derivation so that you do not necessarily have to use string queries but can derive an Apache Cassandra CQL query from the query method name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public interface BasicUserRepository extends Repository&amp;lt;User, Long&amp;gt; {

  /**
   * Derived query method.
   * Creates {@code SELECT * FROM users WHERE username = ?0}.
   */
  User findUserByUsername(String username);

  /**
   * Derived query method using SASI (SSTable Attached Secondary Index)
   * features through the {@code LIKE} keyword.
   * This query corresponds with
   * {@code SELECT * FROM users WHERE lastname LIKE '?0'}.
   * {@link User#lastname} is not part of the
   * primary key so it requires a secondary index.
   */
  List&amp;lt;User&amp;gt; findUsersByLastnameStartsWith(String lastnamePrefix);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can find examples for query derivation for Spring Data for Apache Cassandra in our &lt;a href="https://github.com/spring-projects/spring-data-examples/blob/c523b8d468484075658a2b3c63a4a718c54bab16/cassandra/example/src/main/java/example/springdata/cassandra/basic/BasicUserRepository.java"&gt;examples repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Query derivation supports all predicates provided by Apache Cassandra and ships with predicates for SASI (SSTable Attached Secondary Index) indexes. In this context, query derivation is in not opinionated about primary keys or columns with a secondary index. There is no support for &lt;code&gt;AllowFiltering&lt;/code&gt; &lt;a href="https://jira.spring.io/browse/DATACASS-376"&gt;yet&lt;/a&gt;. Also, repository query methods also support &lt;code&gt;Stream&lt;/code&gt; as a return type. Using a &lt;code&gt;Stream&lt;/code&gt; does not preload the whole result set but iterates over the results as you pull on the stream.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To round things off, you can now use JSR-310 and ThreeTen back-port types as well as JodaTime types in your domain classes that were added as part of the Java 8 support story.
JSR-310 types are converted to native Apache Cassandra data types. Refer to the revised &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.5.0.RELEASE/reference/html/#mapping-conversion"&gt;reference documentation&lt;/a&gt; or our &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/c523b8d468484075658a2b3c63a4a718c54bab16/cassandra/java8"&gt;Java 8 examples&lt;/a&gt; for details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public class Order {

  @Id String id;
  LocalDate orderDate;
  ZoneId zoneId;
}

public interface OrderRepository extends Repository&amp;lt;Order, String&amp;gt; {

  /**
   * Method parameters are converted according the registered
   * Converters into Cassandra types.
   */
  @Query("SELECT * from pizza_orders WHERE orderdate = ?0 and zoneid = ?1 ALLOW FILTERING")
  Order findOrderByOrderDateAndZoneId(LocalDate orderDate, ZoneId zoneId);

  /**
   * String-based query using native data types.
   */
  @Query("SELECT * from pizza_orders WHERE orderdate = ?0 and zoneid = ?1 ALLOW FILTERING")
  Order findOrderByDate(com.datastax.driver.core.LocalDate orderDate, String zoneId);

  /**
   * Streaming query.
   */
  Stream&amp;lt;Order&amp;gt; findAll();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Data type support is configurable by registering custom conversions.
For details on this, make sure you check out the examples &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/c523b8d468484075658a2b3c63a4a718c54bab16/cassandra/example/src/main/java/example/springdata/cassandra/convert"&gt;dedicated to this on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A last noteworthy feature is user-defined types (UDT).
With Ingalls, you can now either use mapped user-defined types embedded in your domain classes or just use the native &lt;code&gt;UDTValue&lt;/code&gt; type.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Table
public class Person {

  @Id int id;

  String firstname, lastname;
  Address current;
  List&amp;lt;Address&amp;gt; previous;

  @CassandraType(type = Name.UDT, userTypeName = "address")
  UDTValue alternative;
}

@UserDefinedType
public class Address {
  String street, zip, city;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Explicitly mapped iser-defined types map structured values to &lt;code&gt;UDTValue&lt;/code&gt; under the coverts so thatyyou can keep working with a domain class while the mapping is handled by Spring Data for Apache Cassandra.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;UDT values are stored in a row which makes mapped UDTs embedded objects.
You can use UDTs as singular property or as part of a collection type.
If you are using schema creation, then user-defined types are created in the data store on application startup.
UDTs are value objects conceptually, which means that updates to UDT values (by saving a domain object) result in replacing the entire value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For details on particular features please refer to the revised &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.5.0.RELEASE/reference/html/"&gt;reference documentation&lt;/a&gt; or the &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/9a2e95a784cf449bdda372668ae78e8d5c06956d/cassandra/example/src/main/java/example/springdata/cassandra/udt"&gt;UDT example&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="support-for-javaslang"&gt;&lt;a class="anchor" href="#support-for-javaslang"&gt;&lt;/a&gt;Support for Javaslang&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data repositories now support &lt;a href="http://www.javaslang.io/"&gt;Javaslang&lt;/a&gt;'s &lt;a href="http://static.javadoc.io/io.javaslang/javaslang/2.1.0-alpha/javaslang/control/Option.html"&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; and collection types as return values for repository query methods. &lt;code&gt;Option&lt;/code&gt; can be used as an alternative to JDK 8&amp;#8217;s &lt;code&gt;Optional&lt;/code&gt;, &lt;a href="http://static.javadoc.io/io.javaslang/javaslang/2.1.0-alpha/javaslang/collection/Seq.html"&gt;&lt;code&gt;Seq&lt;/code&gt;&lt;/a&gt; can be used as an alternative to JDK&amp;#8217;s &lt;code&gt;List&lt;/code&gt;. Javaslang&amp;#8217;s &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt; are supported, too, and transparently mapped from their JDK counterparts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public interface PersonRepository extends Repository&amp;lt;Person, Long&amp;gt; {

    Option&amp;lt;Person&amp;gt; findById(Long id);

    Seq&amp;lt;Person&amp;gt; findByFirstnameContaining(String firstname);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For more information see the &lt;a href="https://github.com/spring-projects/spring-data-examples/blob/a41f69127caba6f7b96c868336b93968c000f728/jpa/javaslang/src/test/java/example/PersonRepositoryIntegrationTests.java#L49-L73"&gt;JPA with Javaslang example&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="spring-data-ldap"&gt;&lt;a class="anchor" href="#spring-data-ldap"&gt;&lt;/a&gt;Spring Data LDAP&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Spring LDAP project has shipped support for Spring Data repositories itself for quite a while.
With Ingalls, we have extracted that support into a Spring Data module, so that changes that we make to our internal SPIs propagate to the LDAP based implementation more quickly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you are an existing Spring LDAP repositories user, you are affected by this change and need to adopt two changes to your project:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="olist arabic"&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;a href="http://projects.spring.io/spring-data-ldap/#quick-start"&gt;&lt;code&gt;Spring Data LDAP&lt;/code&gt;&lt;/a&gt; to your project dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change the packages to the repository components from &lt;code&gt;org.springframework.ldap.repository&lt;/code&gt; to &lt;code&gt;org.springframework.data.ldap.repository&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;That said, Spring LDAP 2.3.0 already removed its repository support and if you follow the steps above you can continue using LDAP repositories with Spring Data LDAP 1.0. Learn more about  LDAP repositories by taking a look at our &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/9a2e95a784cf449bdda372668ae78e8d5c06956d/ldap/example"&gt;Spring Data LDAP example&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="conclusion"&gt;&lt;a class="anchor" href="#conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;I hope I could give you a quick overview about the new features of the Ingalls release train. We&amp;#8217;re looking forward to your feedback via our &lt;a href="https://gitter.im/spring-projects/spring-data"&gt;Gitter channel&lt;/a&gt;. Also, please go ahead and report any bugs you spot in our &lt;a href="https://jira.spring.io"&gt;JIRA&lt;/a&gt;. Happy coding!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Migrating from Spring XD to Spring Data Cloud Flow</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/30/springone-platform-2016-replay-migrating-from-spring-xd-to-spring-data-cloud-flow" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-01-30:2821</id>
    <updated>2017-01-30T12:45:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speakers: Katie Mooney; Director, Marketing Operations, zData; Cahlen Humphreys; Big Data Solutions Architect, zData &amp;amp; Dillon Woods; Chief Technology Officer, zData&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/lessons-learned-migrating-from-spring-xd-to-spring-data-cloud-flow-katie-mooney-dillon-woods-cahlen-humphreys"&gt;http://www.slideshare.net/SpringCentral/lessons-learned-migrating-from-spring-xd-to-spring-data-cloud-flow-katie-mooney-dillon-woods-cahlen-humphreys&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The goal of this session is to teach companies how they can use real-time data to make predictions with Spring Cloud Data Flow, Spark 2.0 and Spark ML. It will cover how to train your model using Spark ML in Spark 2.0. Once trained we will show you how to make real-time predictions using the model and Spring Cloud Data Flow.&lt;/p&gt;
&lt;p&gt;In this session we will point out key differences in Spring XD that have been resolved in Spring Cloud Data Flow. We will highlight why we feel that Spring Cloud Data Flow has a much more promising future with it&amp;rsquo;s real time analytics dashboard written in Spring. This session will also highlight Cloud Foundry and how it is used to quickly deploy and integrate new stream features.&lt;/p&gt;
&lt;p&gt;What we cover:&lt;br/&gt;-Best practices for streaming data&lt;br/&gt;-Bus services for data point transport&lt;br/&gt;-Stream scaling and development&lt;br/&gt;-Feature cleansing, normalization, and transformation techniques&lt;br/&gt;-Training and Validating models in Spark and Spark ML&lt;br/&gt;-Monitoring your streaming applications in Cloud Foundry&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/rf_kbtaLU4o" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Reactive Kafka</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/30/springone-platform-2016-replay-reactive-kafka" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-01-30:2820</id>
    <updated>2017-01-30T12:42:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Rajini Sivaram&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/reactive-kafka"&gt;http://www.slideshare.net/SpringCentral/reactive-kafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apache Kafka is a distributed, scalable, high-throughput messaging bus. Over the last few years, Kafka has emerged as a key building block for data-intensive distributed applications. As a high performance message bus, Kafka enables the development of distributed applications using the microservices architecture.&lt;/p&gt;
&lt;p&gt;Reactive Streams simplifies the development of asynchronous systems using non-blocking back pressure. The reactive framework enables the development of asynchronous microservices by providing a side-effect free functional API with minimal overhead that supports low latency, non-blocking end-to-end data flows.&lt;/p&gt;
&lt;p&gt;After an introduction to Kafka and reactive streams, we will explore the development of a reactive streams interface for Kafka and the use of this interface for building robust applications using the microservices architecture.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-ioxYn9Vlao" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay:  Task Madness - Modern on demand processing</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/30/springone-platform-2016-replay-task-madness-modern-on-demand-processing" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-01-30:2819</id>
    <updated>2017-01-30T12:34:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speakers: Michael Minella,Glenn Renfro&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/task-madness-modern-on-demand-processing"&gt;http://www.slideshare.net/SpringCentral/task-madness-modern-on-demand-processing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The flexibility promised by cloud computing is something that hasn&amp;rsquo;t been fully available in many use cases yet. Most application models are still based on long running containers, robbing users of that very flexibility. Spring Cloud Task, a new project in the Spring portfolio provides both functional and non-functional capabilities for building short lived, cloud-native, microservices. This talk will introduce the project as well as look at example applications. Since we&amp;rsquo;re in Vegas, we&amp;rsquo;re going to put that on demand processing to good use by demonstrating how we used it to generate a March Madness NCAA Men&amp;rsquo;s Basketball Tournament bracket. We&amp;rsquo;ll review how it worked, why Spring Cloud Task was the best fit for this type of application, and how we did this past March!&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/golp4gH7MsI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Secure &amp; Dynamic App Config at GapTech with Spring Cloud, Vault and Consul</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/30/springone-platform-2016-replay-secure-dynamic-app-config-at-gaptech-with-spring-cloud-vault-and-consul" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-01-30:2818</id>
    <updated>2017-01-30T12:29:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Nivesh Gopathi, Gap Tech&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/secure-dynamic-app-config-at-gaptech"&gt;http://www.slideshare.net/SpringCentral/secure-dynamic-app-config-at-gaptech&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As organizations move to audit trails over managed processes, continuous delivery with aggressive MTTR, security first doctrines and ephemeral instances, a key enabler is a platform ability for dynamic application configuration and securely bootstrapping application secrets. In this session, we will go over what the use cases for dynamic configuration and application secrets management are with some high level requirements, how we are collaboratively solving for these at enterprise scale using Spring Cloud Config, Vault and Consul and what’s coming next.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/edKASC0zXzw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.4.4 Available Now</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/26/spring-boot-1-4-4-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2017-01-26:2816</id>
    <updated>2017-01-26T16:39:44Z</updated>
    <content type="html">&lt;p&gt;I am pleased to announce that Spring Boot &lt;code&gt;1.4.4&lt;/code&gt; has been released and is available now from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Spring Boot 1.4.4 includes &lt;a href="https://github.com/spring-projects/spring-boot/milestone/77?closed=1"&gt;over 60 fixes, improvements and 3rd party dependency updates&lt;/a&gt;! Thanks to all that have contributed!&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask at &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Release Train Ingalls Goes GA</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/26/spring-data-release-train-ingalls-goes-ga" />
    <category term="releases" label="Releases" />
    <author>
      <name>Oliver Gierke</name>
    </author>
    <id>tag:spring.io,2017-01-26:2814</id>
    <updated>2017-01-26T14:14:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring Data team I&amp;rsquo;d like to announce the general availability of our &lt;a href="https://en.wikipedia.org/wiki/Daniel_Henry_Holmes_Ingalls_Jr."&gt;Ingalls&lt;/a&gt; release train. After nine months of development, this release not only contains a huge set of new features, improvements and bug fixes, it also marks the conclusion of a branch of Spring Data that has helped developers dealing with persistence for more than 5 years &amp;mdash; even 8, if you count in some module&amp;rsquo;s predecessors.&lt;/p&gt;
&lt;p&gt;The release ships more than 630 tickets fixed in total. Here&amp;rsquo;s a very truncated list of the most important features shipping with the release:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Upgrade to Spring 4.3 as Spring Framework baseline.&lt;/li&gt;
  &lt;li&gt;Add Spring Data LDAP (the Spring Data related bits of Spring LDAP) to the release train.&lt;/li&gt;
  &lt;li&gt;Elevate Spring Data for Apache Cassandra to a Core module, give it a complete overhaul and upgrade it to Cassandra 3. User defined types, support for Java 8 &lt;code&gt;Stream&lt;/code&gt; and &lt;code&gt;Optional&lt;/code&gt; etc.&lt;/li&gt;
  &lt;li&gt;Performance improvements in object-to-store mapping by avoiding reflection in favor of ASM generated code using method handles.&lt;/li&gt;
  &lt;li&gt;More aggregation framework for MongoDB.&lt;/li&gt;
  &lt;li&gt;Improved stream execution verification in JPA (reports a missing surrounding transaction).&lt;/li&gt;
  &lt;li&gt;Support for mapping XML and JSON payloads to projection interfaces.&lt;/li&gt;
  &lt;li&gt;Any-match mode for our query-by-example support.&lt;/li&gt;
  &lt;li&gt;Support for Redis Geo commands.&lt;/li&gt;
  &lt;li&gt;CORS support in Spring Data REST.&lt;/li&gt;
  &lt;li&gt;Support for Javaslang collection and map types as repository query method return types.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;re gonna have a blog post ready casting more light on those features in a couple of days. Find a more complete but curated list of changes in our &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Ingalls"&gt;release train wiki&lt;/a&gt;. The team&amp;rsquo;s focus is now shifting to our next generation Spring Data, starting with the Kay release train about to go GA in Q2 2017. Watch out for another milestone release of that coming soon. That in turn means, Ingalls will be included in the upcoming Spring Boot 1.5 release and the Spring Framework 4 based release train that&amp;rsquo;s going under primary maintenance going forward. Hopper is about to phase out to only see occasional updates for Spring Boot 1.4 releases.&lt;/p&gt;
&lt;p&gt;To round things off, here&amp;rsquo;s the list of modules shipped:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 1.13 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/1.13.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.13.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.13.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.13.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 1.11 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/1.11.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.11.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.11.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.11.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 1.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/1.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.2.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 1.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/1.5.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.5.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.5.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.5.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 2.1 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/2.1.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.1.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.1.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.1.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Gemfire 1.9 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-gemfire/1.9.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.9.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.9.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.9.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 4.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/4.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.2.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 1.10 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/1.10.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.10.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.10.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.10.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP 1.0 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/1.0.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/ldap/docs/1.0.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/ldap/docs/1.0.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/ldap/docs/1.0.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 1.1 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/1.1.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/1.1.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/1.1.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 2.6 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/2.6.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.6.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.6.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.6.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 1.8 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/1.8.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.8.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.8.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.8.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 2.1 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/2.1.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.1.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.1.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.1.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 2.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/2.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.2.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Release Train Hopper SR7 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/26/spring-data-release-train-hopper-sr7-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Oliver Gierke</name>
    </author>
    <id>tag:spring.io,2017-01-26:2813</id>
    <updated>2017-01-26T12:16:09Z</updated>
    <content type="html">&lt;p&gt;In preparation of the upcoming Spring Boot 1.4.4 release, I am pleased to announce the availability of the seventh service release of Spring Data release train Hopper. The release ships &lt;a href="https://jira.spring.io/issues/?filter=15466"&gt;39 tickets fixed&lt;/a&gt; and is a recommended upgrade for all users.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 1.12.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/1.12.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.12.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.12.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.12.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 1.10.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/1.10.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.10.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.10.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.10.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 1.1.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/1.1.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.1.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.1.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.1.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 1.4.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/1.4.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.4.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.4.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.4.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 2.0.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/2.0.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.0.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.0.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.0.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Gemfire 1.8.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-gemfire/1.8.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.8.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.8.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.8.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 4.1.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/4.1.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.1.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.1.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.1.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 1.9.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/1.9.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.9.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.9.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.9.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 1.0.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/1.0.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/1.0.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/1.0.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 2.5.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/2.5.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.5.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.5.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.5.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 1.7.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/1.7.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.7.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.7.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.7.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 2.0.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/2.0.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.0.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.0.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.0.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 2.1.7 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/2.1.7.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.1.7.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.1.7.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.1.7.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Couchbase</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/26/spring-tips-couchbase" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2017-01-26:2808</id>
    <updated>2017-01-26T00:07:01Z</updated>
    <content type="html">&lt;p&gt;Speaker: &lt;a href="https://www.twitter.com/starbuxman"&gt;Josh Long&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Spring fans! In this tip, we&amp;rsquo;ll look at the Spring Data Couchbase support in Spring Boot 1.4.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/NONg7xrOhPA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Team at Devoxx US 2017</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/25/spring-team-at-devoxx-us-2017" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-01-25:2807</id>
    <updated>2017-01-25T21:53:00Z</updated>
    <content type="html">&lt;p&gt;Join the Spring Team at the 1st ever &lt;a href="https://devoxx.us"&gt;Devoxx event&lt;/a&gt; in the United States on March 21-23, 2017!&lt;br/&gt;&lt;a href="http://pivotal.io"&gt;Pivotal&lt;/a&gt; is sponsoring and will be at booth # 104 from 10am-8pm on Tuesday March 21st, and 9:45am - 4:30pm on Wednesday March 22rd.&lt;/p&gt;
&lt;p&gt;We will have experts available to talk to you about Spring Boot, Spring Cloud, Spring Cloud Data Flow, Cloud Foundry, and much more. Stop by and learn about Cloud Native Java from the leaders at Pivotal.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t miss talks from Spring leaders on Cloud-Native, Reactive Spring, Eclipse and Big Data!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cfp.devoxx.us/2017/talk/XIA-0432/Cloud_Native_Java"&gt;Cloud Native Java with Josh Long&lt;/a&gt;&lt;br/&gt;Room 7 - Tuesday from 11:30 AM til 12:20 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cfp.devoxx.us/2017/talk/JXY-6860/Reactive_Spring"&gt;Reactive Spring with Josh Long and Mark Heckler&lt;/a&gt;&lt;br/&gt;Room 1 - Tuesday from 3:00 PM til 3:50 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cfp.devoxx.us/2017/talk/WHT-4635/Navigate_All_the_Knowledge"&gt;Navigate All the Knowledge with James Weaver&lt;/a&gt;&lt;br/&gt;Room 2 - Wednesday from 2:30 PM til 3:20 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cfp.devoxx.us/2017/talk/FVI-4576/Next_Level_Spring_Boot_Tooling"&gt;Next Level Spring Boot Tooling with Martin Lippert&lt;/a&gt;&lt;br/&gt;Room 7 - Wednesday from 3:30 PM til 4:00 PM&lt;/p&gt;
&lt;p&gt;If you are attending Eclipse Converge, Martin Lippert will also be presenting&lt;br/&gt;&lt;a href="https://www.eclipseconverge.org/na2017/session/sneak-peek-spring-boot-language-server"&gt;A sneak peek into the Spring Boot language server&lt;/a&gt;&lt;br/&gt;Room C - Monday, March 20, 2017 - 15:45 to 16:20&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Integration 4.3.7 is Available</title>
    <link rel="alternate" href="https://spring.io/blog/2017/01/25/spring-integration-4-3-7-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2017-01-25:2806</id>
    <updated>2017-01-25T21:52:47Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the Spring Integration team, I am pleased to announce that the &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=15852"&gt;4.3.7.RELEASE&lt;/a&gt; of Spring Integration is now available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This release contains a few important bug fixes as well as a couple of improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In particular, this version uses the recently announced &lt;a href="https://spring.io/blog/2017/01/25/spring-framework-4-3-6-available-now"&gt;Spring Framework 4.3.6&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Please be aware that some performance issues were detected when using Spring Integration with Spring Framework versions 4.3.4 and 4.3.5. We recommend that all users upgrade to this version, but this could be particularly important for users of Spring Integration versions 4.3.5 and 4.3.6, which used those versions of Spring Framework respectively. See &lt;a href="https://jira.spring.io/browse/SPR-14929"&gt;this issue&lt;/a&gt; for details to see if you are affected&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This version will be the default version with the upcoming Spring Boot 1.4.4 and 1.5.0 releases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-integration/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/INT"&gt;JIRA&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md"&gt;Contributions&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-integration"&gt;Chat&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
</feed>
